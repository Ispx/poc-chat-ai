name: Agente Main Guardian

on:
  pull_request:
    branches:
      - main

jobs:
  analyze_diff:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write   # necessário para comentar no PR

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
       # with:
       #   token: ${{ secrets.MY_PAT }}
      - name: Get diff between main and PR branch
        run: |
          BASE_BRANCH="origin/main"
          HEAD_BRANCH="HEAD"
          PR_BRANCH="${{ github.head_ref }}"

          git fetch origin main
          diff_output=$(git diff $BASE_BRANCH $HEAD_BRANCH)
          system_msg_1="Você é o agente Main Guardian responsável por proteger a branch main das novas alterações que serão implementadas para isso você precisa realizar análise das alterações entre a branch a principal ($BASE_BRANCH) e a que contém as novas alterações ($PR_BRANCH)."
          system_msg_2="Seu objetivo é identificar possíveis bugs, vulnerabilidades, alterações críticas que possam afetar as funcionalidades já existentes na branch principal (main), e sugerir melhorias/refatorações na branch $PR_BRANCH."
      
          json_payload=$(jq -n \
          --arg diff "$diff_output" \
          --arg msg1 "$system_msg_1" \
          --arg msg2 "$system_msg_2" \
            '{
              system_instruction: {
                parts: [
                  { text: $msg1 },
                  { text: $msg2 }
                ]
              },
              contents: [
                {
                  parts: [
                    { text: $diff }
                  ]
                }
              ],
              tools: [
                { code_execution: {} }
              ],
              generationConfig: {
                thinkingConfig: { thinkingBudget: 3000 },
                temperature: 0.5,
                maxOutputTokens: 3000,
                topP: 0.8,
                topK: 10
              }
            }'
          )

          response=$(curl --location 'https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-04-17:generateContent?key=${{ secrets.GEMINI_API_KEY }}' \
            --header 'Content-Type: application/json' \
            --data-raw "$json_payload")

          output_text=$(echo "$response" | jq -r '.candidates[0].content.parts[].text')

          # Salva a análise em um arquivo temporário
          echo "$output_text" > analysis.txt

      - name: Comment on Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pr_number=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          body=$(cat analysis.txt | jq -Rs .)
          curl -s -X POST \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Content-Type: application/json" \
            -d "{\"body\": $body}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/$pr_number/comments"