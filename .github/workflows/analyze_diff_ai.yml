name: Git diff report AI

on:
  pull_request:
    branches:
      - main

jobs:
  analyze_diff:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write   # necessário para comentar no PR

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get diff between main and PR branch
        run: |
          BASE_BRANCH="origin/main"
          HEAD_BRANCH="HEAD"
          diff_output=$(git diff $BASE_BRANCH $HEAD_BRANCH)

          json_payload=$(jq -n --arg diff "$diff_output" '{
            system_instruction: {
              parts: [
                {
                  text: "Você é um agente responsável por realizar análise das alterações entre duas branches: a principal (main) e a que contém as novas alterações (dev)."
                },
                {
                  text: "Seu objetivo é identificar possíveis vulnerabilidades, alterações críticas que possam causar problemas na main, e sugerir melhorias/refatorações."
                }
              ]
            },
            contents: [
              {
                parts: [
                  {
                    text: $diff
                  }
                ]
              }
            ],
            tools: [
              {
                code_execution: {}
              }
            ],
            generationConfig: {
              thinkingConfig: {
                thinkingBudget: 1024
              },
              temperature: 0.5,
              maxOutputTokens: 3000,
              topP: 0.8,
              topK: 10
            }
          }')

          response=$(curl --location 'https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-04-17:generateContent?key=${{ secrets.GEMINI_API_KEY }}' \
            --header 'Content-Type: application/json' \
            --data-raw "$json_payload")

          output_text=$(echo "$response" | jq -r '.candidates[0].content.parts[].text')

          # Salva a análise em um arquivo temporário
          echo "$output_text" > analysis.txt

      - name: Comment on Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pr_number=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          body=$(cat analysis.txt | jq -Rs .)
          curl -s -X POST \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Content-Type: application/json" \
            -d "{\"body\": $body}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/$pr_number/comments"
